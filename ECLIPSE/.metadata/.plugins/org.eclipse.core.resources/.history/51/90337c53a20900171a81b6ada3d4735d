/*
 * Analisis
 * 	Proposito: cubo que simula el tres en raya de forma tridimensional
 * 	Entradas: 
 * 				juega>> caracter
 * 				jug1, jug2: nombre de los jugadores
 * 				icadena, jcadena, kcadena: profundidad, fila y columna
 * 	Salidas:
 * 	Restricciones: 
 * 				juega>> solo puede ser 's' o 'n'
 * 				jug1, jug2>> no pueden estar vacios
 * 				icadena, jcadena, kcadena>> deben ser mayor o igual que 0 y menor que 3
 * 				Las fichas solo pueden ponerse en espacios vacios
 * 				Cada jugador debe mover solo sus fichas
 * 
 * 
 * 
 * 	Pseudocodigo Generalizado
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */

import java.util.Scanner;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;



public class Juego3enRaya3D {

	public static void main(String[] args) throws IOException{
		
		Scanner entrada=new Scanner(System.in);
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		char juega=' ';
		String jug1,jug2;
		boolean winner1=false;
		int dado1,dado2;
		boolean ganador=false,gana1=false,pasa=false;
		cubo3D cubo=new cubo3D();
		String icadena,jcadena,kcadena;
		
		
		//Leer y validar si juega
		do{
			System.out.println("¿Quiere Jugar? S/N");
			juega=Character.toLowerCase(entrada.next().charAt(0));
			System.out.println("");
		}while(!gestoraJuego.validaJuega(juega));
		
		//Mientras juega sea si
		while(juega=='s'){
		
			//Leer y validar nombre jugador1*
			do{
				System.out.println("Introduzca el nombre del jugador 1");
				jug1=bf.readLine();
				System.out.println("");
			}while(!gestoraJuego.compruebaNombre(jug1));
			
			//Leer y validar nombre jugador2*
			do{
				System.out.println("Introduzca el nombre del jugador 2");
				jug2=bf.readLine();
				System.out.println("");
			}while(!gestoraJuego.compruebaNombre(jug2));
			
			//Repetir Mientras haya empate
			do{
				System.out.println("Tiremos los dados");System.out.println("");
				
				//Tirar dados*
				//dado1=gestoraJuego.tiraDado();
				//dado2=gestoraJuego.tiraDado();
				dado1=5;
				dado2=3;
				System.out.println(jug1+" ha sacado "+dado1);System.out.println("");
				System.out.println(jug2+" ha sacado "+dado2);System.out.println("");
				if(gestoraJuego.compruebaDados(dado1, dado2)==0){
					System.out.println("Ha habido empate");
				}
			}while(gestoraJuego.compruebaDados(dado1, dado2)==0);//Fin Repetirs Mientras
				
			//Comprobar primero en mover
			if(dado1>dado2){
				System.out.println("Pone ficha primero "+jug1);
				System.out.println("");
				gana1=true;
			}else 
				System.out.println("Pone ficha primero "+jug2);
				System.out.println("");
			
					//jugador 1 sale primero
					if(gana1==true){
						
						//Repetir Mientras los jugadores tengan fichas y no haya ganador
						do{
							//Si NO HAY GANADOR
							if(ganador==false){							
																														
								//Leer y validar jugada
								do{										
									
									cubo.pintaCubo();
									System.out.println("");
									//Leer y validar posicion
									do{
										System.out.println("Turno de "+jug1);										
										System.out.println("");
										
										System.out.println("Introduzca la profundidad donde quiere poner la ficha");
										icadena=bf.readLine().replace(" ", "");									
										System.out.println("");	
										
										System.out.println("Introduzca la fila donde quiere poner la ficha");										
										jcadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
										System.out.println("Introduzca la columna donde quiere poner la ficha");										
										kcadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
									}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
									
									//if(cubo.validaPonFicha(icadena, jcadena, kcadena)){					
										cubo.ponFicha(icadena, jcadena, kcadena, 1);
										//pasa=true;
									//}																		
								}while( !pasa);
								pasa=false;
								
								//Comprobar si hay ganador							
								if(cubo.compruebaGanador()){
									ganador=true;
									winner1=true;
								}																	
							}//FIN SI NO HAY GANADOR															
										
									
							//jugador 2 sale segundo
							//Si NO HAY GANADOR
							if(ganador==false){

								//Leer y validar jugada
								do{
									cubo.pintaCubo();
									System.out.println("");
									//Leer y validar posicion
									do{
										System.out.println("Turno de "+jug2);
										System.out.println("");
										
										System.out.println("Introduzca la profundidad donde quiere poner la ficha");
										icadena=bf.readLine().replace(" ", "");									
										System.out.println("");	
										
										System.out.println("Introduzca la fila donde quiere poner la ficha");
										jcadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
										System.out.println("Introduzca la columna donde quiere poner la ficha");
										kcadena=bf.readLine().replace(" ", "");
										System.out.println("");
									}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
									
									//Si la posiscion elegida es correcta llamamos a ponFicha y cambiamos pasa a true
									if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
										cubo.ponFicha(icadena, jcadena, kcadena, 2);
										pasa=true;
									}
								}while(!pasa);
								pasa=false;
								
								//Comprobar si hay ganador*									
								if(cubo.compruebaGanador()){
									ganador=true;								
								}									
							}//FIN SI NO HAY GANADOR																																
						}while(cubo.getPosicionesLibres()>21 && ganador==false);//Fin Mientras queden fichas y no haya ganador
							
					}else{// jugador 2 sale primero						
						//Repetir Mientras los jugadores tengan fichas
						do{
							//Si NO HAY GANADOR
							if(ganador==false){
																														
								//Leer y validar jugada
								do{									
									cubo.pintaCubo();
									System.out.println("");
									//Leer y validar posicion
									do{
										System.out.println("Turno de "+jug2);
										System.out.println("");
										
										System.out.println("Introduzca la profundidad donde quiere poner la ficha");
										icadena=bf.readLine().replace(" ", "");										
										System.out.println("");	
										
										System.out.println("Introduzca la fila donde quiere poner la ficha");
										jcadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
										System.out.println("Introduzca la columna donde quiere poner la ficha");
										kcadena=bf.readLine().replace(" ", "");
										System.out.println("");
									}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
									
									if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
										cubo.ponFicha(icadena, jcadena, kcadena, 2);
										pasa=true;
									}
								}while( !pasa);
								pasa=false;
								
								//Comprobar si hay ganador*		//poner ganador a true y un indicador para saber quien gana								
								if(cubo.compruebaGanador()){
									ganador=true;
								}																	
							}//FIN SI NO HAY GANADOR									
										
									
							//jugador 2 sale segundo
							//Si NO HAY GANADOR
							if(ganador==false){
								
								//Leer y validar jugada
								do{
									cubo.pintaCubo();
									System.out.println("");
									//Leer y validar posicion
									do{
										System.out.println("Turno de "+jug1);
										System.out.println("");
										
										System.out.println("Introduzca la profundidad donde quiere poner la ficha");
										icadena=bf.readLine().replace(" ", "");									
										System.out.println("");	
										
										System.out.println("Introduzca la fila donde quiere poner la ficha");
										jcadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
										System.out.println("Introduzca la columna donde quiere poner la ficha");
										kcadena=bf.readLine().replace(" ", "");
										System.out.println("");
									}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
									
									//Si la posiscion elegida es correcta llamamos a ponFicha y cambiamos pasa a true
									if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
										cubo.ponFicha(icadena, jcadena, kcadena, 1);
										pasa=true;
									}
								}while(!pasa);
								pasa=false;
								
								//Comprobar si hay ganador*									
								if(cubo.compruebaGanador()){
									ganador=true;
									//winner2=true;;
								}									
								
							}//FIN SI NO HAY GANADOR																																
						}while(cubo.getPosicionesLibres()>21 && ganador==false);//Fin Mientras queden fichas
																		
					}//Fin SI sale jugador 1 SINO sale jugador 2	
					

					
				//A PARTIR DE AQUI SE EMPIEZA A MOVER FICHAS
				
				if(ganador==false){
									
					//jugador 1 mueve primero
					if(gana1==true){
						
						//Repetir Mientras no haya ganador
						do{
								//SI NO HAY GANADOR
								if(ganador==false){
							
									//Leer y validar QUITAR FICHA 
									do{								
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Mueve ficha "+jug1);
											System.out.println("");
											
											System.out.println("Introduzca la profundidad de la ficha que quiere cambiar");
											icadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la fila de la ficha que quiere cambiar");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna de la ficha que quiere cambiar");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										if(cubo.validaQuitaFicha(icadena, jcadena, kcadena, 1)){
											cubo.quitaFicha(icadena, jcadena, kcadena, 1);
											pasa=true;
										}									
									}while( !pasa);//FIN LEER Y VALIDAR QUITAR FICHA
									pasa=false;
																																	
									//Leer y validar PONER FICHA
									do{
										
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Introduzca la profundidad donde quiere poner la ficha");
											icadena=bf.readLine().replace(" ", "");									
											System.out.println("");	
											
											System.out.println("Introduzca la fila donde quiere poner la ficha");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna donde quiere poner la ficha");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
											cubo.ponFicha(icadena, jcadena, kcadena, 1);
											pasa=true;
										}
									}while( !pasa);//FIN LEER Y VALIDAR PONER FICHA
									pasa=false;
									
									//Comprobar si hay ganador*	
									if(cubo.compruebaGanador()){
										ganador=true;
										winner1=true;
									}									
								}//FIN SI NO HAY GANADOR		
								
							//jugador 2 mueve segundo
								
								//SI NO HAY GANADOR
								if(ganador==false){								
								
									
									//Leer y validar QUITAR FICHA 
									do{								
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Mueve ficha "+jug2);
											System.out.println("");
											
											System.out.println("Introduzca la profundidad de la ficha que quiere cambiar");
											icadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la fila de la ficha que quiere cambiar");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna de la ficha que quiere cambiar");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										if(cubo.validaQuitaFicha(icadena, jcadena, kcadena, 2)){
											cubo.quitaFicha(icadena, jcadena, kcadena, 2);
											pasa=true;
										}									
									}while( !pasa);//FIN LEER Y VALIDAR QUITAR FICHA
									pasa=false;
	
									
									//Leer y validar PONER FICHA
									do{
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Introduzca la profundidad donde quiere poner la ficha");
											icadena=bf.readLine().replace(" ", "");										
											System.out.println("");	
											
											System.out.println("Introduzca la fila donde quiere poner la ficha");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna donde quiere poner la ficha");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										//Si la posiscion elegida es correcta llamamos a ponFicha y cambiamos pasa a true
										if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
											cubo.ponFicha(icadena, jcadena, kcadena, 2);
											pasa=true;
										}
									}while(!pasa);
									pasa=false;
									
									//Comprobar si hay ganador*	
									if(cubo.compruebaGanador()){
										ganador=true;
										//winner2=true;
									}	
								}//FIN SI NO HAY GANADOR
						}while(ganador==false);
																				
						}else{								
							//Repetir Mientras no haya ganador
							do{
								// jugador 2 mueve primero
								//SI NO HAY GANADOR
								if(ganador==false){
									
								
								//Leer y validar QUITAR FICHA 
								do{								
									cubo.pintaCubo();
									System.out.println("");
									//Leer y validar posicion
									do{
										System.out.println("Mueve ficha "+jug2);
										System.out.println("");
										
										System.out.println("Introduzca la profundidad de la ficha que quiere cambiar");
										icadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
										System.out.println("Introduzca la fila de la ficha que quiere cambiar");
										jcadena=bf.readLine().replace(" ", "");
										System.out.println("");
										
										System.out.println("Introduzca la columna de la ficha que quiere cambiar");
										kcadena=bf.readLine().replace(" ", "");
										System.out.println("");
									}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
									
									if(cubo.validaQuitaFicha(icadena, jcadena, kcadena, 2)){
										cubo.quitaFicha(icadena, jcadena, kcadena, 2);
										pasa=true;
									}									
								}while( !pasa);//FIN LEER Y VALIDAR QUITAR FICHA
								pasa=false;

								
									//Leer y validar PONER FICHA
									do{										
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Introduzca la profundidad donde quiere poner la ficha");
											icadena=bf.readLine().replace(" ", "");										
											System.out.println("");	
											
											System.out.println("Introduzca la fila donde quiere poner la ficha");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna donde quiere poner la ficha");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
											cubo.ponFicha(icadena, jcadena, kcadena, 2);
											pasa=true;
										}
									}while( !pasa);
									pasa=false;
									
									//Comprobar si hay ganador*		
									if(cubo.compruebaGanador()){
										ganador=true;
									}																																									
								}//FIN SI NO HAY GANADOR
								
								
								//jugador 1 mueve segundo								
								//SI NO HAY GANADOR
								if(ganador==false){
																	
									//Leer y validar QUITAR FICHA 
									do{								
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Introduzca la profundidad de la ficha que quiere cambiar");
											icadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la fila de la ficha que quiere cambiar");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna de la ficha que quiere cambiar");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										if(cubo.validaQuitaFicha(icadena, jcadena, kcadena, 1)){
											cubo.quitaFicha(icadena, jcadena, kcadena, 1);
											pasa=true;
										}									
									}while( !pasa);//FIN LEER Y VALIDAR QUITAR FICHA
									pasa=false;

									
									//Leer y validar PONER FICHA
									do{
										cubo.pintaCubo();
										System.out.println("");
										//Leer y validar posicion
										do{
											System.out.println("Introduzca la profundidad donde quiere poner la ficha");
											icadena=bf.readLine().replace(" ", "");										
											System.out.println("");	
											
											System.out.println("Introduzca la fila donde quiere poner la ficha");
											jcadena=bf.readLine().replace(" ", "");
											System.out.println("");
											
											System.out.println("Introduzca la columna donde quiere poner la ficha");
											kcadena=bf.readLine().replace(" ", "");
											System.out.println("");
										}while(!cubo.validaPosicion(icadena, jcadena, kcadena));
										
										//Si la posiscion elegida es correcta llamamos a ponFicha y cambiamos pasa a true
										if(cubo.validaPonFicha(icadena, jcadena, kcadena)){
											cubo.ponFicha(icadena, jcadena, kcadena, 1);
											pasa=true;
										}
									}while(!pasa);
									pasa=false;
									
									//Comprobar si hay ganador*	
									if(cubo.compruebaGanador()){
										ganador=true;
										winner1=true;
									}
								}//FIN SI NO HAY GANADOR
							}while(ganador==false);																	
					}//Fin SI sale jugador 1 SINO sale jugador 2					
											
				}//Fin SI EN LA RONDA ANTERIOR NO HUBO GANADOR
			
			cubo.pintaCubo();
			System.out.println("");
			
			ganador=false;
			gana1=false;
			cubo.montaCubo();
			
			//ESCRIBIR GANADOR
			if(winner1==true){
				System.out.println("Gana "+jug1);System.out.println("");
			}else
				System.out.println("Gana "+jug2);System.out.println("");
						
			//Volver a leer y validar si juega**
			do{
				System.out.println("¿Quiere volver a Jugar? S/N");
				juega=Character.toLowerCase(entrada.next().charAt(0));
				System.out.println("");
			}while(!gestoraJuego.validaJuega(juega));//Fin Mientras
			
		}//Fin Mientras jugar sea si	
		entrada.close();
	}
}